<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>512</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string># This Python file uses the following encoding: utf-8
import spotipy
from spotipy import util
from spotipy.oauth2 import SpotifyOAuth
import os
import sys
import json

playlistID = "0iCMTjrN0P0ZbH8wbN2W7C"
cache_path = "/Users/marco/Dropbox/Work/Personal projects/Spotipy"

# ----- Notification feature -----
def notify(title, text):
    os.system("""
              osascript -e 'display notification "{}" with title "{}"'
              """.format(text, title))


# ----- define scope and get auth token -----
def add_to_playlist_test():
    username = "kabaldo"
    scope = 'user-read-currently-playing playlist-modify-private playlist-modify-public'
    client_id="281fccce8b3b410ea246505de9edba04"
    client_secret="5b5c9325e8e94d35bad319af2004c3ca"
    redirect_uri = "https://localhost:8888/callback"

    token = util.prompt_for_user_token(username, scope, client_id, client_secret, redirect_uri)
    
    # token is the automatic way
    # sp = spotipy.Spotify(auth=token)
    
    # access_token is my cached token I took from the cache json
    sp = spotipy.Spotify(auth=token)

    # sp = spotipy.oauth2.SpotifyClientCredentials()

    # ----- get playlist -----
    playlist = sp.playlist(playlistID)

    # ----- get playing track, if nothing is being played, notify and exit -----
    currently_playing = sp.currently_playing()
    if currently_playing is None:
        notification_title = " - - NO SONG PLAYING - -"
        notification_text = "- - - - - - - - - - - - - - - - - - - -"
        notify(notification_title.encode('utf-8'), notification_text.encode('utf-8'))
        sys.exit()

    # ----- get playlist, check if track already exist in the playlist. If yes, print error. If not, add track to playlist -----
    playlist_content = sp.playlist(playlist['id'], fields="tracks,next")
    for item in playlist_content["tracks"]["items"]:
        if item["track"]["id"] == currently_playing["item"]["id"]:
            notification_title = " - - DUPLICATE DETECTED - -"
            notification_text = "- - - - - - - - - - - - - - - - - - - -"
            notify(notification_title.encode('utf-8'), notification_text.encode('utf-8'))
            sys.exit()

    sp.playlist_add_items(playlistID, [currently_playing["item"]["uri"]])    
    notification_title = playlist["name"]
    notification_text = currently_playing["item"]["name"]
    notify(notification_title.encode('utf-8'), notification_text.encode('utf-8'))


# ----- print -----
# print(json.dumps(playlist["name"], sort_keys=True, indent=2))

add_to_playlist_test()



# the current authorization flow goes as:
# if the token is valid, good good. If it's not, it might get refreshed?
# to get a new one use the other 
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>FF6E95E9-62B2-4A22-A837-91FE557EC8BA</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>E8B2EA7E-55A5-4961-BCD1-37F4CEA2A575</string>
				<key>UUID</key>
				<string>B4423E4F-EE1F-4F7F-AD38-EA2BA24A21BD</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>459.000000:814.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
